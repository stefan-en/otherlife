@startuml

title __CREATURES's Class Diagram__\n

  namespace creatures {
    abstract class creatures.Creature {
        {static} + DEFAULT_CREATURE_HEIGHT : int
        {static} + DEFAULT_CREATURE_WIDTH : int
        {static} + DEFAULT_SPEED : float
        # speed : float
        # xMove : float
        # yMove : float
        + Creature()
        + getHealth()
        + getSpeed()
        + getxMove()
        + getyMove()
        + move()
        + moveX()
        + moveY()
        + setHealth()
        + setSpeed()
        + setxMove()
        + setyMove()
        # collisionWithTile()
    }
  }
  

  namespace creatures {
    abstract class creatures.Enemy {
        # attackTimer : int
        # facing : boolean
        # isAttacking : boolean
        # isMoving : boolean
        # isWaiting : boolean
        + Enemy()
        + die()
        + getAttackTimer()
        + isAttacking()
        + isFacing()
        + isMoving()
        + isWaiting()
        + render()
        + setAttackTimer()
        + setAttacking()
        + setFacing()
        + setMoving()
        + setWaiting()
        + tick()
    }
  }
  

  namespace creatures {
    class creatures.Enemy_b {
        ~ directie : boolean
        + Enemy_b()
        + die()
        + getInput()
        + render()
        + tick()
        - getCurrentAnimationFrame()
    }
  }
  

  namespace creatures {
    class creatures.Enemy_f {
        + Enemy_f()
        + die()
        + render()
        + tick()
        - getCurrentAnimationFrame()
    }
  }
  

  namespace creatures {
    class creatures.Player {
        ~ max_h : int
        - atkColldown : long
        - atkime : long
        - directie : boolean
        {static} - instance : Player
        - lastAttackTime : long
        - salt : boolean
        - score : int
        - timer : int
        + die()
        {static} + getInstance()
        + getInventory()
        + getScore()
        + postRender()
        + render()
        + setHealth()
        {static} + setInstance()
        + setInventory()
        + setScore()
        + tick()
        - Player()
        - checkAttacks()
        - getCurrentAnimationFrame()
        - getInput()
    }
  }
  

  creatures.Creature -up-|> entities.Entity
  creatures.Enemy -up-|> creatures.Creature
  creatures.Enemy o-- tilegame.Handler : handler
  creatures.Enemy o-- creatures.states.EnemyState : state
  creatures.Enemy_b -up-|> creatures.Enemy
  creatures.Enemy_b o-- tilegame.Animation : atk_b_d
  creatures.Enemy_b o-- tilegame.Animation : atk_b_s
  creatures.Enemy_b o-- tilegame.Animation : dead_b_d
  creatures.Enemy_b o-- tilegame.Animation : dead_b_s
  creatures.Enemy_b o-- tilegame.Animation : idl_b_d
  creatures.Enemy_b o-- tilegame.Animation : idl_b_s
  creatures.Enemy_b o-- tilegame.Animation : walk_b_d
  creatures.Enemy_b o-- tilegame.Animation : walk_b_s
  creatures.Enemy_f -up-|> creatures.Enemy_b
  creatures.Enemy_f o-- tilegame.Animation : atk_f_d
  creatures.Enemy_f o-- tilegame.Animation : atk_f_s
  creatures.Enemy_f o-- tilegame.Animation : dead_f_d
  creatures.Enemy_f o-- tilegame.Animation : dead_f_s
  creatures.Enemy_f o-- tilegame.Animation : idl_f_d
  creatures.Enemy_f o-- tilegame.Animation : idl_f_s
  creatures.Enemy_f o-- tilegame.Animation : walk_f_d
  creatures.Enemy_f o-- tilegame.Animation : walk_f_s
  creatures.Player -up-|> creatures.Creature
  creatures.Player o-- tilegame.Animation : animAtk_l
  creatures.Player o-- tilegame.Animation : animAtk_r
  creatures.Player o-- tilegame.Animation : animSt_l
  creatures.Player o-- tilegame.Animation : animSt_r
  creatures.Player o-- tilegame.Animation : animWalk_l
  creatures.Player o-- tilegame.Animation : animWalk_r
  creatures.Player o-- tilegame.Animation : anim_jump_left
  creatures.Player o-- tilegame.Animation : anim_jump_right
  creatures.Player o-- tilegame.inventory.Inventory : inventory


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
