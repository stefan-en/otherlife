@startuml

title __STATES's Class Diagram__\n

  namespace states {
    class states.GameOverState {
        + GameOverState()
        + render()
        + tick()
    }
  }
  

  namespace states {
    class states.GameState {
        {static} - difficulty : boolean
        + GameState()
        {static} + isDifficulty()
        + render()
        {static} + setDifficulty()
        + tick()
    }
  }
  

  namespace states {
    class states.MeniuState {
        + MeniuState()
        + render()
        + tick()
    }
  }
  

  namespace states {
    class states.PauseState {
        + PauseState()
        + render()
        + tick()
    }
  }
  

  namespace states {
    class states.PlayState {
        + PlayState()
        + render()
        + tick()
    }
  }
  

  namespace states {
    abstract class states.State {
        {static} - currentState : State
        + State()
        {static} + getState()
        {abstract} + render()
        {static} + setState()
        {abstract} + tick()
    }
  }
  

  namespace states {
    class states.StateManager {
        {static} + GAMEOVER : int
        {static} + MENIU : int
        {static} + PAUSE : int
        {static} + PLAY : int
        ~ states : ArrayList<State>
        + StateManager()
        + add()
        + addAndpop()
        + pop()
        + render()
        + tick()
    }
  }
  

  states.GameOverState -up-|> states.State
  states.GameState -up-|> states.State
  states.GameState o-- tilegame.ui.UIManager : uiManager
  states.GameState o-- tilegame.World : world
  states.MeniuState -up-|> states.State
  states.MeniuState o-- tilegame.ui.UIManager : uiManager
  states.PauseState -up-|> states.State
  states.PlayState -up-|> states.State
  states.State o-- tilegame.Handler : handler
  states.StateManager o-- tilegame.Handler : handler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
